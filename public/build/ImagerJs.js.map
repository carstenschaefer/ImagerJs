{
  "version": 3,
  "sources": ["../../live-reload.js", "../../src/ImagerJs.js"],
  "sourcesContent": ["try {\r\n    if (!window.live_reload_enabled) {\r\n        window.live_reload_enabled = true;\r\n        const url = `http://localhost:8989/esbuild`;\r\n        new EventSource(url).addEventListener('change', () => {\r\n            document.body.innerHTML = '<h1>RELOADING<h1>';\r\n            location.reload();\r\n        })\r\n        console.log('live reload enabled: ', url);\r\n    }\r\n} catch (error) {\r\n    console.error('live reload failed', error);\r\n}", "var imagerInstances = [];\r\n\r\nvar PLATFORM = {\r\n  ios: \"ios\",\r\n  android: \"android\",\r\n  windowsMobile: \"windowsMobile\",\r\n  genericMobile: \"genericMobile\",\r\n};\r\n\r\n/**\r\n *\r\n * @param $imageElement <img> Element to attach to\r\n *\r\n * @param options {Object} Options\r\n * @param options.editModeCss {Object} Css object for image edit box.\r\n * <br>\r\n * For example, to make background transparent like in photoshop, try this:\r\n * <br>\r\n * <code><pre>\r\n *   {\r\n *    \"background\": \"url(assets/transparent.png)\"\r\n *   }\r\n * </pre></code>\r\n * <br>\r\n *\r\n * Edit box border also could be set here like this:\r\n * <br>\r\n * <code><pre>\r\n *   {\r\n *    \"border\": \"1px dashed green\"\r\n *   }\r\n * </pre></code>\r\n *\r\n * @param {Function} options.detectTouch\r\n * A custom function that will be used by ImagerJs to determine whether it is\r\n * running on touch device or not.\r\n * <br><br>\r\n *\r\n * This function must return <code>true</code> or <code>false</code>.\r\n * <br><br>\r\n *\r\n * <code>true</code> means that touch device is detected and ImagerJs should\r\n * adjust its toolbar size, add touch events etc.\r\n * <br><br>\r\n *\r\n * Note that if this function is not specified, ImagerJs will use its own\r\n * detection mechanism.\r\n * <br><br>\r\n *\r\n * To disable any detection simply set this parameter to such function:\r\n * <code><pre>function() { return false; }</pre></code>\r\n *\r\n * @param {String} options.waitingCursor\r\n * Cursor that will be used for long-running operations.\r\n * <br><br>\r\n *\r\n * Example:\r\n * <code><pre>url(path/to/cursor.cur), default</pre></code>\r\n *\r\n * Note the word 'default' at the end: that is the name of cursor that will\r\n * be used when url is unavailable.\r\n *\r\n * More information about css cursor property could be found here:\r\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor}\r\n *\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor}\r\n *\r\n * @param {Number} options.imageSizeForPerformanceWarning Size in bytes.\r\n *\r\n * If image is bigger that provided number, an alert will be shown\r\n * saying that such big images could cause serious performance issues.\r\n *\r\n * @param {Number} options.maxImageWidth Maximum image width in pixels.\r\n *\r\n * If image is width is larger than this value it will be scaled down with .\r\n * This option allows avoiding bad performance with large images.\r\n *\r\n * @param {Number} options.maxImageHeight Maximum image height in pixels.\r\n *\r\n * If image is width is larger than this value it will be scaled down with .\r\n * This option allows avoiding bad performance with large images.\r\n *\r\n * @param {Number} options.canvasSizeLimit : Maximum canvas size, in pixels.\r\n * Canvas is scaled down, if it gets more then this value.\r\n * Default is 32 megapixels for desktop, and 5 megapixels for mobile.\r\n * Warning: if canvasSizeLimit is set larger, then browser restrictions, big images can fail to load.\r\n *\r\n * If image is height is larger than this value it will be scaled down.\r\n * This option allows avoiding bad performance with large images.\r\n *\r\n * @constructor\r\n * @memberof ImagerJs\r\n */\r\nvar Imager = function ($imageElement, options) {\r\n  var _this = this;\r\n\r\n  _this.$imageElement = $($imageElement);\r\n\r\n  _this.defaultOptions = {\r\n    saveData: undefined,\r\n    loadData: undefined,\r\n    quality: 1,\r\n    targetScale: 1,\r\n    plugins: [],\r\n    format: undefined,\r\n    toolbarButtonSize: 32,\r\n    toolbarButtonSizeTouch: 50,\r\n    editModeCss: {\r\n      border: \"1px solid white\",\r\n    },\r\n    pluginsConfig: {},\r\n    detectTouch: null,\r\n    waitingCursor: \"wait\",\r\n    imageSizeForPerformanceWarning: 1000000, // 1 MB\r\n    maxImageWidth: 2048,\r\n    maxImageHeight: 2048,\r\n  };\r\n\r\n  options = options ? options : {};\r\n  _this.options = $.extend(true, _this.defaultOptions, options);\r\n\r\n  _this.debug = false;\r\n\r\n  /**\r\n   * Whether to show temporary canvases that are used to render some image states\r\n   * before final rendering to the canvas that user sees.\r\n   *\r\n   * Use this for debugging with breakpoints.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  _this.showTemporaryCanvas = false;\r\n\r\n  _this.targetScale = _this.options.targetScale;\r\n  _this.quality = _this.options.quality;\r\n\r\n  _this._eventEmitter = $({});\r\n  _this._isInEditMode = false;\r\n\r\n  /**\r\n   * Array containing operations history with images.\r\n   * @type {Array}\r\n   */\r\n  _this.history = [];\r\n\r\n  imagerInstances.push(_this);\r\n\r\n  /**\r\n   * Will be set only for jpeg images.\r\n   * Stores exif info of the original image.\r\n   * @type {null|Object}\r\n   */\r\n  _this.originalExif = null;\r\n\r\n  // detect Platform\r\n  this.detectPlatform();\r\n\r\n  // if no canvasSizeLimit set in options, set it\r\n  if (!this.options.canvasSizeLimit) {\r\n    if (\r\n      [PLATFORM.ios, PLATFORM.android, PLATFORM.windowsMobile].indexOf(\r\n        _this.platform\r\n      ) !== -1\r\n    ) {\r\n      // 5 MP on devices\r\n      this.canvasSizeLimit = 5 * 1024 * 1024;\r\n    } else {\r\n      // 32 MP on desktop\r\n      this.canvasSizeLimit = 32 * 1024 * 1024;\r\n    }\r\n  }\r\n\r\n  _this.$originalImage = _this.$imageElement.clone();\r\n\r\n  _this.handleImageElementSrcChanged();\r\n\r\n  /**\r\n   * Imager will instantiate all plugins and store them here.\r\n   * @type {Object|null}\r\n   */\r\n  _this.pluginsInstances = null;\r\n  _this.instantiatePlugins(pluginsCatalog);\r\n\r\n  $(\"body\").on(\"imagerResize\", function () {\r\n    _this.adjustEditContainer();\r\n  });\r\n\r\n  $(window).on(\"resize\", function () {\r\n    _this.adjustEditContainer();\r\n  });\r\n};\r\n\r\nImager.prototype.on = function (event, handler) {\r\n  this._eventEmitter.on(event, handler);\r\n};\r\n\r\nImager.prototype.off = function (event) {\r\n  this._eventEmitter.off(event);\r\n};\r\n\r\nImager.prototype.trigger = function (event, args) {\r\n  this._eventEmitter.trigger(event, args);\r\n\r\n  var eventMethodName =\r\n    \"on\" + event.substr(0, 1).toUpperCase() + event.substr(1);\r\n\r\n  for (var i = 0; i < this.pluginsInstances.length; i++) {\r\n    var p = this.pluginsInstances[i];\r\n\r\n    if (p[eventMethodName] !== undefined) {\r\n      p[eventMethodName](args);\r\n    }\r\n  }\r\n};\r\n\r\nImager.prototype.log = function () {\r\n  if (this.debug) {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    console.log.apply(console, args);\r\n  }\r\n};\r\n\r\nImager.prototype.invokePluginsMethod = function (methodName) {\r\n  var results = [];\r\n\r\n  var args = Array.prototype.slice.call(arguments);\r\n\r\n  args = args.slice(1); // remove method name\r\n\r\n  for (var i = 0; i < this.pluginsInstances.length; i++) {\r\n    var p = this.pluginsInstances[i];\r\n\r\n    if (p[methodName] !== undefined) {\r\n      var result = p[methodName].apply(p, args);\r\n\r\n      if (result) {\r\n        results.push({\r\n          name: p.__name,\r\n          instance: p,\r\n          result: result,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n/**\r\n * Sorts plugins based in their `weight`\r\n */\r\nImager.prototype.pluginSort = function (p1, p2) {\r\n  if (p1.weight === undefined || p2.weight === null) {\r\n    p1.weight = Infinity;\r\n  }\r\n\r\n  if (p2.weight === undefined || p2.weight === null) {\r\n    p2.weight = Infinity;\r\n  }\r\n\r\n  if (p1.weight < p2.weight) {\r\n    return -1;\r\n  }\r\n\r\n  if (p1.weight > p2.weight) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\n/*\r\n * Iterates through plugins array from config and instantiates them.\r\n */\r\nImager.prototype.instantiatePlugins = function (plugins) {\r\n  this.pluginsInstances = [];\r\n\r\n  for (var pluginName in plugins) {\r\n    if (this.options.plugins.indexOf(pluginName) > -1) {\r\n      if (plugins.hasOwnProperty(pluginName)) {\r\n        var pluginInstance = new plugins[pluginName](\r\n          this,\r\n          this.options.pluginsConfig[pluginName]\r\n        );\r\n\r\n        pluginInstance.__name = pluginName;\r\n        this.pluginsInstances.push(pluginInstance);\r\n      }\r\n    }\r\n  }\r\n\r\n  this.pluginsInstances.sort(this.pluginSort);\r\n};\r\n\r\n/**\r\n * Returns plugin instance by its name\r\n *\r\n * @param pluginName\r\n * @returns {*}\r\n */\r\nImager.prototype.getPluginInstance = function (pluginName) {\r\n  for (var i = 0; i < this.pluginsInstances.length; i++) {\r\n    var p = this.pluginsInstances[i];\r\n\r\n    if (p.__name == pluginName) {\r\n      return p;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * This function should be called when image's `src` attribute is changed from outside of the imager.\r\n * It checks `src` attribute, detects image format, prepares image (rotates it according to EXIF for example)\r\n * and triggers `ready` event on imager.\r\n */\r\nImager.prototype.handleImageElementSrcChanged = function () {\r\n  var _this = this;\r\n\r\n  if (!_this.options.format) {\r\n    _this.options.format = _this.getImageFormat(\r\n      _this.$imageElement.attr(\"src\")\r\n    );\r\n  }\r\n\r\n  if (_this.$imageElement.attr(\"data-imager-id\")) {\r\n    // if image already has an id, then it has been edited using Imager.\r\n    // and should contain original image data somewhere\r\n    _this.id = _this.$imageElement.attr(\"data-imager-id\");\r\n\r\n    if (_this.$imageElement.attr(\"src\").length < 1) {\r\n      throw new Error(\r\n        \"Imager was initialized on an empty image. Please check image's `src` attribute. \" +\r\n          \"It should not be empty.\"\r\n      );\r\n    }\r\n  } else {\r\n    _this.id = util.uuid();\r\n    _this.$imageElement.attr(\"data-imager-id\", _this.id);\r\n  }\r\n\r\n  //region prepare image\r\n  // Image needs some preparations before it could be used by imager.\r\n  // Fix EXIF rotation data, make image smaller on slow devices etc.\r\n  _this\r\n    .fixImageSizeAndRotation(_this.$imageElement)\r\n    .then(function (imageData) {\r\n      _this.$imageElement.attr(\"src\", imageData);\r\n      _this.$imageElement.attr(\"imager-attached\", true);\r\n    })\r\n    .fail(function (err) {\r\n      console.error(err);\r\n    });\r\n\r\n  _this.$imageElement.on(\"load.imagerInit\", function () {\r\n    _this.$imageElement.off(\"load.imagerInit\");\r\n    _this.trigger(\"ready\");\r\n  });\r\n};\r\n\r\n/**\r\n * Prepares image after first loading. It checks image EXIF data and fixes it's rotation,\r\n * scales image down if it's too large.\r\n *\r\n * @param {HTMLImageElement} $image\r\n * @returns {jQuery.Deferred.<string>} Image data base64 string\r\n */\r\nImager.prototype.fixImageSizeAndRotation = function ($image) {\r\n  // first of all we need to avoid HUGE problems that safari has when displaying\r\n  // images that have exif orientation other than 1.\r\n  // So first step is to remove any exif data from image.\r\n  // Since we can do that only on base64 string  - here we check whether our image is a base64\r\n  // encoded string. If yes - we can start right away. If not, we need to download it as data first using\r\n  // XMLHttpRequest.\r\n\r\n  var _this = this;\r\n  var deferred = $.Deferred();\r\n\r\n  var imageSrc = $image.attr(\"src\");\r\n\r\n  if (imageSrc.length < 1) {\r\n    return $.when(\"\");\r\n  } else if (imageSrc.indexOf(\"data:image\") === 0) {\r\n    return this._fixBase64ImageSizeAndRotation(imageSrc);\r\n  } else if (imageSrc.indexOf(\"http\") === 0) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.responseType = \"blob\";\r\n    xhr.onload = function () {\r\n      var reader = new FileReader();\r\n      reader.onloadend = function () {\r\n        _this\r\n          ._fixBase64ImageSizeAndRotation(reader.result)\r\n          .then(function (imageData) {\r\n            deferred.resolve(imageData);\r\n          });\r\n      };\r\n      reader.onerror = function (err) {\r\n        deferred.reject(err);\r\n      };\r\n      reader.readAsDataURL(xhr.response);\r\n    };\r\n    xhr.open(\"GET\", imageSrc);\r\n    xhr.send();\r\n    return deferred.promise();\r\n  } else {\r\n    console.error(\"Unsupported image `src`!\");\r\n    return $.when(\"\");\r\n  }\r\n};\r\n\r\n/**\r\n * Base64 image data could contain EXIF data which causes\r\n * @param imageBase64Data\r\n * @returns {*}\r\n * @private\r\n */\r\nImager.prototype._fixBase64ImageSizeAndRotation = function (imageBase64Data) {\r\n  var _this = this;\r\n  var deferred = $.Deferred();\r\n\r\n  var imageFormat = _this.getImageFormat(_this.$imageElement.attr(\"src\"));\r\n\r\n  if (imageFormat === \"jpeg\" || imageFormat === \"jpg\") {\r\n    // first of all - get rid of any rotation in exif\r\n    this.originalExif = piexif.load(imageBase64Data);\r\n    var originalOrientation =\r\n      this.originalExif[\"0th\"][piexif.ImageIFD.Orientation];\r\n    this.originalExif[\"0th\"][piexif.ImageIFD.Orientation] = 1;\r\n    imageBase64Data = piexif.insert(\r\n      piexif.dump(this.originalExif),\r\n      imageBase64Data\r\n    );\r\n  }\r\n\r\n  var image = document.createElement(\"img\");\r\n  image.onload = imageLoaded;\r\n  image.src = imageBase64Data;\r\n\r\n  function imageLoaded() {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = image.naturalWidth;\r\n    canvas.height = image.naturalHeight;\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n\r\n    if (imageFormat === \"jpeg\" || imageFormat === \"jpg\") {\r\n      switch (originalOrientation) {\r\n        case 2:\r\n          // horizontal flip\r\n          ctx.translate(canvas.width, 0);\r\n          ctx.scale(-1, 1);\r\n          break;\r\n        case 3:\r\n          // 180\u00B0 rotate left\r\n          ctx.translate(canvas.width, canvas.height);\r\n          ctx.rotate(Math.PI);\r\n          break;\r\n        case 4:\r\n          // vertical flip\r\n          ctx.translate(0, canvas.height);\r\n          ctx.scale(1, -1);\r\n          break;\r\n        case 5:\r\n          // vertical flip + 90 rotate right\r\n          canvas.width = image.naturalHeight;\r\n          canvas.height = image.naturalWidth;\r\n\r\n          ctx.rotate(0.5 * Math.PI);\r\n          ctx.scale(1, -1);\r\n          break;\r\n        case 6:\r\n          // 90\u00B0 rotate right and flip canvas width and height\r\n          canvas.width = image.naturalHeight;\r\n          canvas.height = image.naturalWidth;\r\n\r\n          ctx.translate(canvas.width, 0);\r\n          ctx.rotate(0.5 * Math.PI);\r\n          break;\r\n        case 7:\r\n          // horizontal flip + 90 rotate right\r\n\r\n          canvas.width = image.naturalHeight;\r\n          canvas.height = image.naturalWidth;\r\n\r\n          ctx.rotate(0.5 * Math.PI);\r\n          ctx.translate(canvas.width, -canvas.height);\r\n          ctx.scale(-1, 1);\r\n          break;\r\n        case 8:\r\n          // 90\u00B0 rotate left\r\n          canvas.width = image.naturalHeight;\r\n          canvas.height = image.naturalWidth;\r\n\r\n          ctx.rotate(-0.5 * Math.PI);\r\n          ctx.translate(-canvas.width, 0);\r\n          break;\r\n      }\r\n    }\r\n\r\n    ctx.drawImage(image, 0, 0);\r\n\r\n    if (canvas.width > _this.options.maxImageWidth) {\r\n      var newWidth = _this.options.maxImageWidth;\r\n\r\n      var scalePercent = (_this.options.maxImageWidth * 100) / canvas.width;\r\n\r\n      var newHeight = (scalePercent * canvas.height) / 100;\r\n\r\n      _this.log(\r\n        \"Image is bigger than we could handle, resizing to\",\r\n        newWidth,\r\n        newHeight\r\n      );\r\n\r\n      util.resizeImage(\r\n        canvas,\r\n        canvas.width,\r\n        canvas.height,\r\n        newWidth,\r\n        newHeight\r\n      );\r\n    }\r\n\r\n    deferred.resolve(canvas.toDataURL(_this.options.format));\r\n  }\r\n\r\n  return deferred.promise();\r\n};\r\n\r\nImager.prototype.startSelector = function () {\r\n  var _this = this;\r\n\r\n  this.$selectorContainer = $(\r\n    '<div class=\"imager-selector-container\" tabindex=\"1\"></div>'\r\n  );\r\n\r\n  var onImagerReady = function () {\r\n    _this.off(\"ready\", onImagerReady);\r\n\r\n    _this.startEditing();\r\n    _this.$selectorContainer.remove();\r\n    _this.$selectorContainer = null;\r\n  };\r\n\r\n  var onImageLoad = function () {\r\n    _this.$imageElement.off(\"load\", onImageLoad);\r\n\r\n    _this.handleImageElementSrcChanged();\r\n    _this.on(\"ready\", onImagerReady);\r\n  };\r\n\r\n  var fileSelector = new util.FileSelector(\"image/*\");\r\n  fileSelector.onFileSelected(function (file) {\r\n    util.setWaiting(_this.$selectorContainer, translations.t(\"Please wait...\"));\r\n\r\n    setTimeout(function () {\r\n      _this.$imageElement.attr(\"src\", file.data);\r\n      _this.$imageElement.css(\"height\", \"auto\");\r\n      _this.$imageElement.css(\"min-height\", \"inherit\");\r\n      _this.$imageElement.css(\"min-width\", \"inherit\");\r\n\r\n      _this.$imageElement.on(\"load\", onImageLoad);\r\n    }, 200);\r\n  });\r\n\r\n  this.$selectorContainer.append(fileSelector.getElement());\r\n\r\n  $(\"body\").append(this.$selectorContainer);\r\n\r\n  var imageOffset = this.$imageElement.offset();\r\n\r\n  this.$selectorContainer.css({\r\n    left: imageOffset.left,\r\n    top: imageOffset.top,\r\n    width: this.$imageElement.width(),\r\n    height: this.$imageElement.height(),\r\n  });\r\n};\r\n\r\nImager.prototype.startEditing = function () {\r\n  this.log(\"startEditing()\");\r\n\r\n  this.hideOriginalImage();\r\n\r\n  if (!this.$imageElement[0].complete) {\r\n    throw new Error(\r\n      \"Trying to start editing image that was not yet loaded. \" +\r\n        \"Please add `ready` event listener to imager.\"\r\n    );\r\n  }\r\n\r\n  this.originalPreviewWidth = this.$imageElement.width();\r\n  this.originalPreviewHeight = this.$imageElement.height();\r\n\r\n  this.$editContainer = $(\r\n    '<div class=\"imager-edit-container\" tabindex=\"1\"></div>'\r\n  );\r\n\r\n  if (this.options.editModeCss) {\r\n    this.$editContainer.css(this.options.editModeCss);\r\n  }\r\n\r\n  $(\"body\").append(this.$editContainer);\r\n\r\n  this._createEditCanvas();\r\n\r\n  this.adjustEditContainer();\r\n\r\n  this.trigger(\"editStart\");\r\n\r\n  this.render();\r\n\r\n  this._isInEditMode = true;\r\n\r\n  this.$editContainer.focus();\r\n\r\n  var sizeInBytes = this.getDataSize();\r\n  if (sizeInBytes > this.options.imageSizeForPerformanceWarning) {\r\n    util.setOverlayMessage(\r\n      this.$editContainer,\r\n      \"Image is too big and could cause very poor performance.\",\r\n      \"default\",\r\n      \"Ok\",\r\n      function () {\r\n        util.removeOverlayMessage(this.$editContainer);\r\n      }.bind(this)\r\n    );\r\n  }\r\n\r\n  this._adjustElementsSize(\r\n    \"toolbar-button\",\r\n    this.touchDevice\r\n      ? this.options.toolbarButtonSizeTouch\r\n      : this.options.toolbarButtonSize\r\n  );\r\n\r\n  // clean up the history\r\n  if (this.history.length === 0) {\r\n    this.commitChanges(\"Original\");\r\n  }\r\n\r\n  this.trigger(\"historyChange\");\r\n};\r\n\r\nImager.prototype.stopEditing = function () {\r\n  if (!this._isInEditMode) {\r\n    return;\r\n  }\r\n\r\n  this.showOriginalImage();\r\n\r\n  this.render();\r\n\r\n  var pluginsDataRaw = this.invokePluginsMethod(\"serialize\");\r\n  var pluginsData = {};\r\n  $(pluginsDataRaw).each(function (i, d) {\r\n    pluginsData[d.name] = d.result;\r\n  });\r\n\r\n  var imageData = null;\r\n\r\n  try {\r\n    imageData = this.canvas.toDataURL(\r\n      \"image/\" + this.options.format,\r\n      this.quality\r\n    );\r\n  } catch (err) {\r\n    if (err.name && err.name === \"SecurityError\") {\r\n      console.error(\r\n        \"Failed to get image data from canvas because of security error.\" +\r\n          \"Usually this happens when image drawed on canvas is located on separate domain without\" +\r\n          \"proper access-control headers.\"\r\n      );\r\n    } else {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  if (!imageData) {\r\n    console.error(\"Failed to get image data from canvas.\");\r\n  }\r\n\r\n  // save current changes to image\r\n  this.$imageElement.attr(\"src\", imageData);\r\n\r\n  this.$editContainer.remove();\r\n  this.$editContainer = null;\r\n\r\n  this.canvas = null;\r\n  this.tempCanvas = null;\r\n\r\n  this.trigger(\"editStop\", { imageData: imageData, pluginsData: pluginsData });\r\n\r\n  this._isInEditMode = false;\r\n};\r\n\r\n/**\r\n * Change the container's z-index property.\r\n *\r\n * @param zIndexValue\r\n */\r\nImager.prototype.setZindex = function (zIndexValue) {\r\n  if (this.$editContainer) {\r\n    this.$editContainer.css(\"z-index\", zIndexValue);\r\n  }\r\n};\r\n\r\n/**\r\n * Stores current image to history, then renders current canvas into image.\r\n *\r\n * @param operationMessage\r\n */\r\nImager.prototype.commitChanges = function (operationMessage, callback) {\r\n  var _this = this;\r\n\r\n  var originalQuality = this.quality;\r\n  var originalTargetScale = this.targetScale;\r\n\r\n  this.quality = 1;\r\n  this.targetScale = 1;\r\n  this.adjustCanvasSize();\r\n  this.render();\r\n\r\n  // save current canvas image to image element\r\n  var imageData = this.canvas.toDataURL(\"image/\" + this.options.format, 100);\r\n\r\n  // set image loading handlers\r\n  this.$imageElement.on(\"load\", imageLoadHandler);\r\n  this.$imageElement.on(\"error\", onImageLoadError);\r\n\r\n  // load image\r\n  this.$imageElement.attr(\"src\", imageData);\r\n\r\n  function imageLoadHandler() {\r\n    _this.$imageElement.off(\"load\", imageLoadHandler);\r\n\r\n    _this.quality = originalQuality;\r\n    _this.targetScale = originalTargetScale;\r\n    _this.adjustCanvasSize();\r\n\r\n    _this.history.push({\r\n      message: operationMessage,\r\n      image: imageData,\r\n      width: _this.$imageElement.width(),\r\n      height: _this.$imageElement.height(),\r\n    });\r\n\r\n    _this.originalPreviewWidth = _this.$imageElement.width();\r\n    _this.originalPreviewHeight = _this.$imageElement.height();\r\n\r\n    _this.render();\r\n    _this.trigger(\"historyChange\");\r\n\r\n    if (callback && callback instanceof Function) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  function onImageLoadError(event) {\r\n    console.warn(\"commitChanges() : image failed to load :\", event);\r\n    console.trace();\r\n  }\r\n};\r\n\r\nImager.prototype.isInEditMode = function () {\r\n  return this._isInEditMode;\r\n};\r\n\r\n/**\r\n * Creates canvas for showing temporary edited image.\r\n * Created temporary canvas for drawing temporary data by plugins etc.\r\n *\r\n * Those canvases could be accessed as this.canvas and this.tempCanvas.\r\n *\r\n * @private\r\n */\r\nImager.prototype._createEditCanvas = function () {\r\n  var imageWidth = this.$imageElement.width();\r\n  var imageHeight = this.$imageElement.height();\r\n\r\n  var imageNaturalWidth = this.$imageElement[0].naturalWidth;\r\n  var imageNaturalHeight = this.$imageElement[0].naturalHeight;\r\n\r\n  var $canvas = $('<canvas class=\"imager-edit-canvas\"/>');\r\n  $canvas.css({\r\n    width: imageWidth,\r\n    height: imageHeight,\r\n  });\r\n\r\n  this.canvas = $canvas[0];\r\n\r\n  this.adjustCanvasSize();\r\n\r\n  this.$editContainer.append($canvas);\r\n\r\n  this.tempCanvas = document.createElement(\"canvas\");\r\n  this.tempCanvas.width = imageNaturalWidth;\r\n  this.tempCanvas.height = imageNaturalHeight;\r\n\r\n  if (this.showTemporaryCanvas) {\r\n    $(\"body\").append(this.tempCanvas);\r\n    $(this.tempCanvas).css({\r\n      position: \"absolute\",\r\n      left: \"50px\",\r\n      top: \"50px\",\r\n      width: imageWidth,\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Renders image on temporary canvas and then invokes plugin methods\r\n * that shoul modify image.\r\n *\r\n * @param [ctx] Context on which to draw image.\r\n */\r\nImager.prototype.render = function (ctx) {\r\n  ctx = ctx !== undefined ? ctx : this.canvas.getContext(\"2d\");\r\n\r\n  var realWidth = this.$imageElement[0].naturalWidth;\r\n  var realHeight = this.$imageElement[0].naturalHeight;\r\n\r\n  if (realWidth === 0 || realHeight === 0) {\r\n    console.warn(\"Trying to render canvas with zero width or height\");\r\n    console.trace();\r\n    return;\r\n  }\r\n\r\n  // reset canvas size to image natural size\r\n  ctx.canvas.width = realWidth * this.targetScale;\r\n  ctx.canvas.height = realHeight * this.targetScale;\r\n\r\n  this.tempCanvas.width = realWidth;\r\n  this.tempCanvas.height = realHeight;\r\n\r\n  var destWidth = ctx.canvas.width;\r\n  var destHeight = ctx.canvas.height;\r\n\r\n  var viewPort = {\r\n    sourceLeft: 0,\r\n    sourceTop: 0,\r\n    sourceWidth: realWidth,\r\n    sourceHeight: realHeight,\r\n    destLeft: 0,\r\n    destTop: 0,\r\n    destWidth: destWidth,\r\n    destHeight: destHeight,\r\n    paddingWidth: 0,\r\n    paddingHeight: 0,\r\n  };\r\n\r\n  this.drawImage(this.$imageElement, ctx, viewPort);\r\n\r\n  this.invokePluginsMethod(\"render\", ctx);\r\n};\r\n\r\nImager.prototype.clearCanvas = function (ctx) {\r\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n  if (this.options.format == \"jpeg\") {\r\n    ctx.fillStyle = \"#FFFFFF\"; // jpeg does not support transparency\r\n    // so without this line all non painted areas will be black.\r\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n  }\r\n};\r\n\r\nImager.prototype.drawImage = function ($img, ctx, viewPort) {\r\n  if (ctx.canvas.width === 0 || ctx.canvas.height === 0) {\r\n    console.warn(\r\n      \"Imager.drawImage() : Trying to render canvas with either width or height equal to 0\"\r\n    );\r\n    return;\r\n  }\r\n\r\n  this._drawWithScaling(\r\n    $img,\r\n    ctx,\r\n    this.tempCanvas.getContext(\"2d\"),\r\n    viewPort.sourceLeft,\r\n    viewPort.sourceTop,\r\n    viewPort.sourceWidth,\r\n    viewPort.sourceHeight,\r\n\r\n    viewPort.destLeft,\r\n    viewPort.destTop,\r\n    viewPort.destWidth,\r\n    viewPort.destHeight,\r\n\r\n    viewPort.paddingWidth,\r\n    viewPort.paddingHeight\r\n  );\r\n};\r\n\r\n/**\r\n * Draws image on canvas with specified dimensions.\r\n * Drawing is performed in few steps to make image smooth.\r\n *\r\n * More information about interpolation here:\r\n * http://stackoverflow.com/questions/17861447/html5-canvas-drawimage-how-to-apply-antialiasing\r\n *\r\n * @param {HTMLImageElement} $img Image to draw\r\n * @param ctx           Canvas context to draw on\r\n * @param tempCtx       Temporary canvas context to draw on interpolation steps\r\n * @param sourceLeft    Source image x coordinate\r\n * @param sourceTop     Source image y coordinate\r\n * @param sourceWidth   Source image width\r\n * @param sourceHeight  Source image height\r\n * @param destLeft      Destination image x coordinate\r\n * @param destTop       Destination image y coordinate\r\n * @param destWidth     Destination image width\r\n * @param destHeight    Destination image height\r\n * @param paddingWidth  Width padding that will be applied to target image\r\n * @param paddingHeight Height padding that will be applied to target image\r\n * @private\r\n */\r\nImager.prototype._drawWithScaling = function (\r\n  $img,\r\n  ctx,\r\n  tempCtx,\r\n  sourceLeft,\r\n  sourceTop,\r\n  sourceWidth,\r\n  sourceHeight,\r\n  destLeft,\r\n  destTop,\r\n  destWidth,\r\n  destHeight,\r\n  paddingWidth,\r\n  paddingHeight\r\n) {\r\n  paddingWidth = paddingWidth !== undefined ? paddingWidth : 0;\r\n  paddingHeight = paddingHeight !== undefined ? paddingHeight : 0;\r\n\r\n  sourceLeft = sourceLeft !== undefined ? sourceLeft : 0;\r\n  sourceTop = sourceTop !== undefined ? sourceTop : 0;\r\n\r\n  var paddingWidthHalf = paddingWidth / 2;\r\n  var paddingHeightHalf = paddingHeight / 2;\r\n\r\n  var tempCanvas = tempCtx.canvas;\r\n\r\n  tempCtx.clearRect(0, 0, sourceWidth, sourceHeight);\r\n\r\n  var img = $img[0];\r\n\r\n  var steps = 3;\r\n\r\n  var step = 0.5;\r\n\r\n  var currentStepWidth = sourceWidth;\r\n  var currentStepHeight = sourceHeight;\r\n\r\n  var currentStepSourceLeft = sourceLeft;\r\n  var currentStepSourceTop = sourceTop;\r\n\r\n  tempCtx.drawImage(\r\n    img,\r\n    currentStepSourceLeft,\r\n    currentStepSourceTop,\r\n    sourceWidth,\r\n    sourceHeight,\r\n    0,\r\n    0,\r\n    currentStepWidth,\r\n    currentStepHeight\r\n  );\r\n\r\n  for (var s = 0; s < steps; s++) {\r\n    if (\r\n      currentStepWidth <= destWidth * 2 ||\r\n      currentStepHeight <= destHeight * 2\r\n    ) {\r\n      break;\r\n    }\r\n\r\n    var prevStepWidth = currentStepWidth;\r\n    var prevStepHeight = currentStepHeight;\r\n\r\n    currentStepWidth *= step;\r\n    currentStepHeight *= step;\r\n\r\n    currentStepSourceLeft *= step;\r\n    currentStepSourceTop *= step;\r\n\r\n    var stepTempCanvas = document.createElement(\"canvas\");\r\n    stepTempCanvas.width = tempCtx.canvas.width;\r\n    stepTempCanvas.height = tempCtx.canvas.height;\r\n\r\n    var stepTempCtx = stepTempCanvas.getContext(\"2d\");\r\n    stepTempCtx.clearRect(0, 0, stepTempCanvas.width, stepTempCanvas.height);\r\n\r\n    stepTempCtx.drawImage(\r\n      tempCanvas,\r\n      currentStepSourceLeft,\r\n      currentStepSourceTop,\r\n      prevStepWidth,\r\n      prevStepHeight,\r\n      0,\r\n      0,\r\n      currentStepWidth,\r\n      currentStepHeight\r\n    );\r\n\r\n    tempCtx.clearRect(0, 0, tempCtx.canvas.width, tempCtx.canvas.height);\r\n\r\n    tempCtx.drawImage(\r\n      stepTempCanvas,\r\n      0,\r\n      0,\r\n      currentStepWidth,\r\n      currentStepHeight,\r\n      0,\r\n      0,\r\n      currentStepWidth,\r\n      currentStepHeight\r\n    );\r\n  }\r\n\r\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n  ctx.drawImage(\r\n    tempCanvas,\r\n    0,\r\n    0,\r\n    currentStepWidth,\r\n    currentStepHeight,\r\n    destLeft + paddingWidthHalf,\r\n    destTop + paddingHeightHalf,\r\n    destWidth - paddingWidth,\r\n    destHeight - paddingHeight\r\n  );\r\n};\r\n\r\n/**\r\n * Sets preview area dimensions.\r\n * Note that this affects only the size of image that user sees.\r\n * Internal image size is not affected.\r\n *\r\n * @param {number} width\r\n * @param {number} height\r\n */\r\nImager.prototype.setPreviewSize = function (width, height) {\r\n  this.$imageElement.css({\r\n    width: width,\r\n    height: height,\r\n  });\r\n\r\n  $(this.canvas).css({\r\n    width: width,\r\n    height: height,\r\n  });\r\n\r\n  $(\"body\").trigger(\"imagerResize\");\r\n  this.log(\"resize trigger\");\r\n\r\n  this.originalPreviewWidth = this.$imageElement.width();\r\n  this.originalPreviewHeight = this.$imageElement.height();\r\n};\r\n\r\nImager.prototype.getPreviewSize = function () {\r\n  return {\r\n    width: this.$imageElement.width(),\r\n    height: this.$imageElement.height(),\r\n  };\r\n};\r\n\r\nImager.prototype.getImageRealSize = function () {\r\n  return {\r\n    width: this.$imageElement[0].naturalWidth,\r\n    height: this.$imageElement[0].naturalHeight,\r\n  };\r\n};\r\n\r\nImager.prototype.getCanvasSize = function () {\r\n  return {\r\n    width: this.canvas.width,\r\n    height: this.canvas.height,\r\n  };\r\n};\r\n\r\nImager.prototype.convertScale = function (value, sourceMax, targetMax) {\r\n  var valueInPercents = (value * 100) / sourceMax;\r\n\r\n  return (valueInPercents * targetMax) / 100;\r\n};\r\n\r\nImager.prototype.hideOriginalImage = function () {\r\n  this.$imageElement.css(\"opacity\", 0);\r\n};\r\n\r\nImager.prototype.showOriginalImage = function () {\r\n  this.$imageElement.css(\"opacity\", 1);\r\n};\r\n\r\n/**\r\n * Takes image's real size (naturalWidth & naturalHeight)\r\n * and adjust canvas size to match that\r\n * but with respect to aspect ratio of preview viewport size.\r\n */\r\nImager.prototype.adjustCanvasSize = function () {\r\n  var imageRealSize = this.getImageRealSize();\r\n  var previewSize = this.getPreviewSize();\r\n\r\n  var newCanvasWidth = 0;\r\n  var newCanvasHeight = 0;\r\n\r\n  var aspectRatio = 0;\r\n\r\n  if (previewSize.width > previewSize.height) {\r\n    newCanvasWidth = imageRealSize.width;\r\n\r\n    aspectRatio = (previewSize.height * 100) / previewSize.width;\r\n    newCanvasHeight = (aspectRatio * newCanvasWidth) / 100;\r\n  } else {\r\n    newCanvasHeight = imageRealSize.height;\r\n\r\n    aspectRatio = (previewSize.width * 100) / previewSize.height;\r\n    newCanvasWidth = (aspectRatio * newCanvasHeight) / 100;\r\n  }\r\n\r\n  this.canvas.width = newCanvasWidth * this.targetScale;\r\n  this.canvas.height = newCanvasHeight * this.targetScale;\r\n\r\n  // if canvas size limit is set - check canvas size\r\n  this.canvasSizeLimit = 1 * 1024 * 1024;\r\n  if (this.canvasSizeLimit) {\r\n    if (this.canvas.width * this.canvas.height > this.canvasSizeLimit) {\r\n      console.warn(\r\n        \"adjustCanvasSize(): canvas size is too big : \",\r\n        this.canvas.width,\r\n        this.canvas.height\r\n      );\r\n      var ratio =\r\n        (0.95 * this.canvasSizeLimit) /\r\n        (this.canvas.width * this.canvas.height);\r\n\r\n      this.canvas.width = this.canvas.width * ratio;\r\n      this.canvas.height = this.canvas.height * ratio;\r\n      console.warn(\r\n        \"adjustCanvasSize(): canvas was reduced to : \",\r\n        this.canvas.width,\r\n        this.canvas.height\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Positions $editContained with absolute coordinates\r\n * to be on top of $imageElement.\r\n */\r\nImager.prototype.adjustEditContainer = function () {\r\n  var _this = this;\r\n\r\n  var imageOffset = _this.$imageElement.offset();\r\n\r\n  if (_this.$editContainer) {\r\n    _this.$editContainer.css({\r\n      left: imageOffset.left,\r\n      top: imageOffset.top,\r\n      width: _this.$imageElement.width(),\r\n      height: _this.$imageElement.height(),\r\n    });\r\n  }\r\n\r\n  if (_this.$selectorContainer) {\r\n    _this.$selectorContainer.css({\r\n      left: imageOffset.left,\r\n      top: imageOffset.top,\r\n      width: this.$imageElement.width(),\r\n      height: this.$imageElement.attr(\"src\")\r\n        ? this.$imageElement.height()\r\n        : \"auto\",\r\n    });\r\n  }\r\n};\r\n\r\nImager.prototype.restoreOriginal = function () {\r\n  this.$imageElement.replaceWith(this.$originalImage);\r\n};\r\n\r\nImager.prototype.historyUndo = function () {\r\n  if (this.history.length < 2) {\r\n    return;\r\n  }\r\n\r\n  var _this = this;\r\n\r\n  var lastEntry = this.history[this.history.length - 2];\r\n\r\n  this.$imageElement.on(\"load\", imageLoadHandler);\r\n  this.$imageElement.attr(\"src\", lastEntry.image);\r\n\r\n  this.$imageElement.width(lastEntry.width);\r\n  this.$imageElement.height(lastEntry.height);\r\n\r\n  function imageLoadHandler() {\r\n    _this.$imageElement.off(\"load\", imageLoadHandler);\r\n\r\n    _this.originalPreviewWidth = _this.$imageElement.width();\r\n    _this.originalPreviewHeight = _this.$imageElement.height();\r\n\r\n    _this.setPreviewSize(lastEntry.width, lastEntry.height);\r\n\r\n    _this.render();\r\n    _this.history.splice(_this.history.length - 1, 1);\r\n\r\n    _this.trigger(\"historyChange\");\r\n  }\r\n};\r\n\r\nImager.prototype.remove = function (removeImage) {\r\n  this.trigger(\"remove\");\r\n\r\n  this.$imageElement.removeAttr(\"imager-attached\");\r\n  this.stopEditing();\r\n  this.showOriginalImage();\r\n  var index = imagerInstances.indexOf(this);\r\n  imagerInstances.splice(index, 1);\r\n\r\n  this.$originalImage = null;\r\n  this.pluginsInstances = null;\r\n\r\n  if (removeImage) {\r\n    this.$imageElement.remove();\r\n  }\r\n};\r\n\r\n/**\r\n * Returns current image data in bytes.\r\n *\r\n * @returns {number} Bytes number\r\n */\r\nImager.prototype.getDataSize = function () {\r\n  var head = \"data:\" + \"image/\" + this.options.format + \";base64,\";\r\n  var data = this.canvas.toDataURL(\r\n    \"image/\" + this.options.format,\r\n    this.quality\r\n  );\r\n\r\n  var size = Math.round(((data.length - head.length) * 3) / 4);\r\n\r\n  return size;\r\n};\r\n\r\n/**\r\n * Tries to find Imager instance associated with provided img element.\r\n *\r\n * @param $img {HTMLImageElement|jQuery}\r\n * @returns {Imager|undefined}\r\n */\r\nImager.getImagerFor = function ($img) {\r\n  for (var i = 0; i < imagerInstances.length; i++) {\r\n    var imager = imagerInstances[i];\r\n\r\n    if (imager.id == $($img).attr(\"data-imager-id\")) {\r\n      return imager;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nImager.isImagerAttached = function ($elem) {\r\n  return $($elem).attr(\"imager-attached\") !== undefined;\r\n};\r\n\r\n/**\r\n * @param {boolean} waiting Waiting status. TRUE for adding 'waiting' text,\r\n * false to remove.\r\n */\r\nImager.prototype.setWaiting = function (waiting) {\r\n  if (waiting) {\r\n    if (this.$editContainer) {\r\n      util.setWaiting(\r\n        this.$editContainer,\r\n        translations.t(\"Please wait...\"),\r\n        this.options.waitingCursor\r\n      );\r\n    }\r\n  } else {\r\n    util.stopWaiting(this.$editContainer);\r\n  }\r\n};\r\n\r\n/**\r\n * Detects image format for either base64 encoded string or http:// url.\r\n * @param {string} imageSrc\r\n */\r\nImager.prototype.getImageFormat = function (imageSrc) {\r\n  if (!imageSrc) {\r\n    return;\r\n  }\r\n\r\n  var extension;\r\n\r\n  if (imageSrc.indexOf(\"http\") === 0) {\r\n    extension = imageSrc.split(\".\").pop();\r\n\r\n    if (extension == \"jpeg\") {\r\n      extension = \"jpeg\";\r\n    } else if (extension == \"jpg\") {\r\n      extension = \"jpeg\";\r\n    } else if (extension == \"png\") {\r\n      extension = \"png\";\r\n    }\r\n  } else if (imageSrc.indexOf(\"data:image\") === 0) {\r\n    if (imageSrc[11] == \"j\") {\r\n      extension = \"jpeg\";\r\n    } else if (imageSrc[11] == \"p\") {\r\n      extension = \"png\";\r\n    }\r\n  }\r\n\r\n  return extension;\r\n};\r\n\r\n/**\r\n * This method allows dynamical size adjustment of elements.\r\n * Elements which needs to be resized should have two attributes:\r\n *\r\n * data-sizeable=\"someNamespace\",\r\n * where someNamespace is unique id for the group of elements tht will be\r\n * resized together.\r\n *\r\n * data-cssrules=width,height,font-size:($v / 2.5)\r\n * which provides a list of css rules on which a new size will be applied.\r\n * If resulting size needs to be modififed in some way, the one could\r\n * specify a function like in font-size.\r\n *\r\n * @private\r\n */\r\nImager.prototype._adjustElementsSize = function (namespace, newSize) {\r\n  var elementsToResize = $(\"[data-sizeable=\" + namespace + \"]\");\r\n\r\n  for (var i = 0; i < elementsToResize.length; i++) {\r\n    var elem = elementsToResize[i];\r\n    var attributesToChange = $(elem).attr(\"data-cssrules\").split(\",\");\r\n\r\n    for (var a = 0; a < attributesToChange.length; a++) {\r\n      var attrName = attributesToChange[a];\r\n      var attrVal = newSize;\r\n\r\n      if (attrName[0] == \"-\") {\r\n        attrName = attrName.substr(1);\r\n        attrVal = \"-\" + newSize;\r\n      }\r\n\r\n      var matches = attrName.match(/:\\((.+)\\)/);\r\n      if (matches) {\r\n        attrName = attrName.replace(matches[0], \"\");\r\n        var expression = matches[1];\r\n        expression = expression.replace(\"$v\", attrVal);\r\n        var result = new Function(\"return \" + expression)();\r\n        attrVal = result;\r\n      }\r\n\r\n      $(elem).css(attrName, attrVal + \"px\");\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Crude detection of device and platform.\r\n * Sets this.platform and this.touchDevice.\r\n * @todo this is BAD. Use more precise methods or some lib\r\n */\r\nImager.prototype.detectPlatform = function () {\r\n  // crude check of platform\r\n  if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\r\n    this.platform = PLATFORM.ios;\r\n  } else if (/Android|BlackBerry/i.test(navigator.userAgent)) {\r\n    this.platform = PLATFORM.android;\r\n  } else if (/IEMobile/i.test(navigator.userAgent)) {\r\n    this.platform = PLATFORM.windowsMobile;\r\n  }\r\n\r\n  // check if options.detectTouch is function\r\n  if (\r\n    this.options.detectTouch &&\r\n    this.options.detectTouch.constructor.name !== \"Function\"\r\n  ) {\r\n    console.error(\r\n      \"detectTouch should be a function which will be \" +\r\n        \"called when Imager needs to determine whether it is working \" +\r\n        \"on touch device\"\r\n    );\r\n    this.options.detectTouch = null;\r\n  }\r\n\r\n  // crude check of touch\r\n  if (this.options.detectTouch) {\r\n    this.touchDevice = this.options.detectTouch(this);\r\n  } else {\r\n    this.touchDevice = /(iPhone|iPod|iPad|BlackBerry|Android)/i.test(\r\n      navigator.userAgent\r\n    );\r\n  }\r\n\r\n  // one more touch check\r\n  var _this = this;\r\n  $(\"body\").on(\"touchstart.DrawerTouchCheck\", function () {\r\n    _this.touchDevice = true;\r\n    $(\"body\").off(\"touchstart.DrawerTouchCheck\");\r\n    _this.log(\"Found touch screen.\");\r\n  });\r\n};\r\n\r\nexport default Imager;\r\n"],
  "mappings": "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",
  "names": []
}
